name: Windows tests (MSVC + ifx + OpenBLAS)

on:
  push:
    branches:
      - maintenance/**
  pull_request:
    branches:
      - main
      - maintenance/**

permissions:
   contents: read  # to fetch code (actions/checkout)

env:
  WINDOWS_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/7dff44ba-e3af-4448-841c-0d616c8da6e7/w_BaseKit_p_2024.1.0.595_offline.exe
  CACHE_NUMBER: 6
  SAMPLES_TAG: 2024.1.0
  COMPILER_VERSION: 2024.1.0
  TBB_VERSION: 2021.12.0
  VS_VER: vs2022

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  get_commit_message:
    name: Get commit message
    uses: ./.github/workflows/commit_message.yml

  fast_dev_py_fail_slow:
    name: fail slow, fast, py3.12/npAny, dev.py
    needs: get_commit_message
    # Ensure (a) this doesn't run on forks by default, and
    #        (b) it does run with Act locally (`github` doesn't exist there)
    if: >
      needs.get_commit_message.outputs.message == 1
      && (github.repository == 'czgdp1807/scipy' || github.repository == '')
    runs-on: windows-2019
    defaults:
      run:
        shell: cmd
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          submodules: recursive

      - name: Get Date
        id: get-date
        run: echo "today=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          update-conda: true
          python-version: 3.11
      - run: conda --version
      - run: which python

      - name: Install pkg-config
        run: |
          conda install conda-forge::pkg-config

      - name: pip-packages
        run: |
          pip install numpy==1.23.5 cython pybind11 pythran meson-python meson ninja pytest pytest-xdist pytest-timeout pytest-fail-slow pooch rich_click click doit pydevtool hypothesis
          pip install -r requirements/openblas.txt

      - name: Cache conda
        uses: actions/cache@v4
        with:
          path: ${{ env.CONDA_PREFIX }}
          key:
            ${{ runner.os }}--${{ steps.get-date.outputs.today }}-conda-${{ env.CACHE_NUMBER }}
        id: envcache

      # - name: cache install
      #   id: cache-install
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #         C:\Program Files (x86)\Intel\oneAPI\
      #     key: install-${{ env.CACHE_NUMBER }}-${{ env.WINDOWS_BASEKIT_URL }}-compiler
      # - name: install
      #   if: steps.cache-install.outputs.cache-hit != 'true'
      #   run: |
      #     echo %WINDOWS_BASEKIT_URL%
      #     tools/install_intel_oneAPI_windows.bat %WINDOWS_BASEKIT_URL%
      # - name: Initialise Intel oneAPI
      #   run: |
      #     C:\"Program Files (x86)"\Intel\oneAPI\setvars.bat

      - name: Build
        run: |
          python dev.py build -C-Duse-pythran=false -C--vsenv --with-scipy-openblas
